LAB 3 ANSWERS:

1. What is the purpose of having an individual handler function for each exception/interrupt? 
   (i.e., if all exceptions/interrupts were delivered to the same handler, what feature that 
   exists in the current implementation could not be provided?)

   ANSWER: The purpose of having an individual handler function for each exception/interrupt is
   to be able to determine which exception/interrupt occurred (such as overflow error or 
   illegal opcode) and properly handle it. This is to isolate the error and carry out the necessary 
   operations to fix the specific exception/interrupt.

2. Did you have to do anything to make the user/softint program behave correctly? The grade script 
   expects it to produce a general protection fault (trap 13), but softint’s code says int $14. 
   Why should this produce interrupt vector 13? What happens if the kernel actually allows softint’s 
   int $14 instruction to invoke the kernel’s page fault handler (which is interrupt vector 14)?

   ANSWER: This should produce interrupt vector 13 because the interrupt vector 14 (page fault handler)
   operates with kernel privilege level, so this is detected and it raises a general protection fault
   instead (which is interrupt vector 13). If the kernel allows instruction 14 to invoke the page handler,
   then it is a permission violation, which could cause the program to have unpredictable behavior.
   This could cause the program to crash or behave incorrectly.